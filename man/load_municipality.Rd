% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_loaders.R
\name{load_municipality}
\alias{load_municipality}
\title{Load Municipality Parcel Shapefile}
\usage{
load_municipality(
  shapefile,
  community_name = NULL,
  projection = 26986,
  validate = TRUE
)
}
\arguments{
\item{shapefile}{Either a file path to a shapefile (character) or an sf object.
File paths can be .shp files or .zip archives containing shapefiles.}

\item{community_name}{Optional community name for metadata (character)}

\item{projection}{Target EPSG code for projection (default: 26986 for
Massachusetts State Plane NAD83). Data will be transformed to this projection
if needed.}

\item{validate}{Logical indicating whether to validate required columns and
data types (default: TRUE)}
}
\value{
An sf object with standardized structure and metadata attributes:
\itemize{
\item All required columns for compliance model calculations
\item Geometry in specified projection (default EPSG:26986)
\item Metadata attributes: community_name, source_file, crs_epsg, load_date, n_parcels
\item Additional class "mbtazone_municipality" for method dispatch
}
}
\description{
Load and validate municipality parcel shapefile with excluded/sensitive land
measurements. This function handles both file paths and pre-loaded sf objects,
ensures correct projection, and validates required columns.
}
\details{
Required columns (from state-provided Basic land map shapefiles):
\itemize{
\item \strong{Identifiers}: LOC_ID, Address, Owner, UseCodes
\item \strong{Areas}: SQFT (numeric), ACRES (numeric)
\item \strong{Transit}: TRANSIT (character, "Y"/"N")
\item \strong{Exclusions}: PublicInst, NonPubExc, Tot_Exclud, Tot_Sensit (numeric)
}

The function will:
\enumerate{
\item Extract zip files to temporary directory if needed
\item Load shapefile using sf::st_read()
\item Transform to target projection (26986) if needed
\item Validate required columns and data types (if validate=TRUE)
\item Add metadata attributes
\item Return standardized sf object
}
}
\examples{
\dontrun{
# Load from zip file
cambridge <- load_municipality(
  "inst/extdata/parcels/49_CAMBRIDGE_basic.zip",
  community_name = "Cambridge"
)

# Load from shapefile path
chelsea <- load_municipality(
  "path/to/57_CHELSEA_basic.shp",
  community_name = "Chelsea"
)

# Load pre-loaded sf object (skip file operations)
data <- sf::st_read("parcels.shp")
validated <- load_municipality(data, validate = TRUE)
}

}
