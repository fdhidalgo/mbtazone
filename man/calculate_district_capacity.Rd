% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compliance_pipeline.R
\name{calculate_district_capacity}
\alias{calculate_district_capacity}
\title{Calculate District Capacity}
\usage{
calculate_district_capacity(
  parcels,
  zoning_params,
  station_areas = NULL,
  override_developable_sf = NULL,
  precomputed = FALSE
)
}
\arguments{
\item{parcels}{An sf object containing parcel data with required columns
(from \code{\link{load_municipality}})}

\item{zoning_params}{Named list of zoning parameters for the district (from
\code{\link{extract_zoning_parameters}} or manual specification). Required elements:
\itemize{
\item min_lot_size
\item base_min_lot_size
\item additional_lot_SF
\item building_height
\item FAR
\item max_lot_coverage
\item min_required_open_space
\item parking_spaces_per_dwelling_unit
\item lot_area_per_dwelling_unit
\item max_dwelling_units_per_acre
\item max_units_per_lot
\item water_included
}}

\item{station_areas}{Optional sf object with transit station buffers (from
\code{\link{load_transit_stations}}). If provided, adds station area flag
to parcels. Ignored if \code{precomputed = TRUE}.}

\item{override_developable_sf}{Optional numeric vector of manual override
values for developable area. Use NA for parcels without overrides.}

\item{precomputed}{Logical indicating whether spatial attributes have been
pre-computed via \code{\link{precompute_spatial_attributes}} (default: FALSE).
When TRUE, skips spatial intersection calculations and uses existing columns,
enabling high-performance batch simulation workflows.}
}
\value{
The input sf object with 18 additional columns representing each
calculation step:
\itemize{
\item \code{developable_area} - Column N
\item \code{net_developable_area} - Column Q
\item \code{exclusion_ratio} - Column R
\item \code{open_space_requirement} - Column S
\item \code{required_open_space_area} - Column T
\item \code{parking_area} - Column U
\item \code{building_footprint} - Column V
\item \code{building_floor_area} - Column W
\item \code{units_building_capacity} - Column X
\item \code{units_density_limits} - Column Y
\item \code{units_lot_coverage} - Column Z
\item \code{units_lot_area_req} - Column AA
\item \code{units_far_limits} - Column AB
\item \code{units_max_cap} - Column AC (adjusted units)
\item \code{below_minimum_lot} - Column AD
\item \code{units_graduated_lots} - Column AE
\item \code{final_unit_capacity} - Column AF
\item \code{units_per_acre} - Column AG
}
}
\description{
Apply all unit capacity calculations to parcels in a district. Chains together
all 18 calculation functions from the MBTA Communities compliance model to
determine final unit capacity for each parcel.
}
\details{
This function implements the complete unit capacity calculation pipeline from
the Excel compliance model. It chains 18 calculation functions in sequence,
with each step building on previous results.

The calculations follow Excel model columns N through AG:
\enumerate{
\item Calculate developable area after exclusions
\item Apply manual overrides if provided
\item Calculate exclusion ratios and open space requirements
\item Determine parking and building footprint
\item Calculate building floor area (envelope)
\item Apply 7 different unit capacity constraint methods
\item Take minimum of all methods as final capacity
\item Calculate units per acre for density verification
}

The function is vectorized and can process thousands of parcels efficiently
(target: <30 seconds for 20,000 parcels).
}
\examples{
\dontrun{
# Load parcel data
parcels <- load_municipality("cambridge.zip")

# Get zoning parameters
params <- extract_zoning_parameters("cambridge_model.xlsx", district = 1)

# Calculate capacity for all parcels
parcels_with_capacity <- calculate_district_capacity(parcels, params)

# With transit station areas
stations <- load_transit_stations()
parcels_with_capacity <- calculate_district_capacity(
  parcels,
  params,
  station_areas = stations
)

# View final capacities
summary(parcels_with_capacity$final_unit_capacity)
}

}
