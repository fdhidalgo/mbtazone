% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smc_particle.R
\name{check_completion}
\alias{check_completion}
\title{Check Particle Completion (Tier 3 Readiness)}
\usage{
check_completion(particle, map)
}
\arguments{
\item{particle}{A ParticleState object}

\item{map}{An mbta_map object containing minimum requirements}
}
\value{
A list with components:
\item{complete}{Logical: TRUE if minimums are met}
\item{capacity_met}{Logical: capacity >= target_capacity}
\item{area_met}{Logical: area >= target_area (or target_area is NA)}
}
\description{
Determine if a particle has met the minimum capacity and area requirements
and is ready for full compliance evaluation (Tier 3). This does NOT check
other hard constraints (contiguity, density, station coverage) - those are
evaluated by \code{evaluate_compliance()} during Tier 3.
}
\details{
\subsection{Completion Criteria}{

A particle is "complete" and ready for Tier 3 when:
\enumerate{
\item \code{total_capacity >= target_capacity}
\item \code{total_area >= target_area} (or \code{target_area} is NA)
}
}

\subsection{Not Checked Here}{

The following constraints are NOT checked in Tier 3 readiness:
\itemize{
\item Contiguity (50\% in single component)
\item Gross density (>= 15 units/acre)
\item Station area coverage (50-90\% in station buffers)
}

These are evaluated by \code{evaluate_compliance()} after the particle completes.
}

\subsection{Stochastic Continuation}{

Per PRD Section 4.3.2, when a particle completes:
\itemize{
\item With probability \code{(1 - p_continue)}: Stop and run Tier 3 compliance
\item With probability \code{p_continue}: Continue growing
}

This prevents "first-hit bias" where all plans cluster at minimums.
}
}
\examples{
\dontrun{
# Propagation loop
while (TRUE) {
  # Add parcel
  particle <- add_parcel_to_particle(particle, next_id, map, prob)

  # Check if minimums met
  completion <- check_completion(particle, map)
  if (completion$complete) {
    # Stochastic continuation
    if (runif(1) < 0.8) {
      # Stop and evaluate
      compliance <- evaluate_compliance(map$data[particle$parcel_ids, ], ...)
      break
    } else {
      # Continue growing (update log_proposal_path with continuation prob)
      particle$log_proposal_path <- particle$log_proposal_path + log(0.8)
    }
  }
}
}

}
\seealso{
\code{\link{check_infeasibility}}, \code{\link{evaluate_compliance}}
}
