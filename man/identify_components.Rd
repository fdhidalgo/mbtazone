% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjacency.R
\name{identify_components}
\alias{identify_components}
\title{Identify Connected Components in Adjacency Graph}
\usage{
identify_components(adj)
}
\arguments{
\item{adj}{An adjacency list (output from build_adjacency())}
}
\value{
An integer vector of length \code{length(adj)} where element \code{i} is the
component ID for parcel \code{i}. Component IDs are numbered 1, 2, 3, ...
Isolated parcels get their own component ID.
}
\description{
Find connected components using depth-first search. Parcels in the same
component can reach each other through adjacent parcels.
}
\details{
This function is used internally for:
\itemize{
\item Tier 2 infeasibility checking (ensuring particle can reach enough parcels)
\item Diagnostic reporting (detecting disconnected parcel groups)
}

The algorithm uses iterative depth-first search to avoid stack overflow
on large connected components.
}
\examples{
\dontrun{
parcels <- load_municipality("inst/extdata/parcels/57_CHELSEA_basic.zip")
adj <- build_adjacency(parcels)
components <- identify_components(adj)

# Count parcels in each component
table(components)

# Find largest component
largest_component <- which.max(table(components))
parcels_in_largest <- which(components == largest_component)
}

}
